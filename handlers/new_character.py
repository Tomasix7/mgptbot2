import os
import logging
from config import bot
from bot.utils import is_admin
from pymongo import MongoClient
import re
from dotenv import load_dotenv
load_dotenv()

MONGO_URI = os.getenv("MONGO_URI")
DBASE = os.getenv('DBASE')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
client = MongoClient(MONGO_URI)
db = client[DBASE]
characters_collection = db['characters']

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
character_data = {}

@bot.message_handler(commands=['newchar'])
def new_character(message):
    if not is_admin(message.chat.id):
        bot.send_message(message.chat.id, "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return
    try:
        chat_id = message.chat.id
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–æ 12 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è —Ü–∏—Ñ—Ä—ã, –Ω–∏–∂–Ω–∏–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ –¥–µ—Ñ–∏—Å):")
        bot.register_next_step_handler(message, get_character_name)
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /new_character: {e}')
        bot.send_message(message.from_user.id, f'{e} ü´§ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω.')
        return

def get_character_name(message):
    chat_id = message.chat.id
    character_name = message.text.strip()

    if len(character_name) > 12 or not re.match(r'^[a-zA-Z0-9_-]+$', character_name):
        bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(message, get_character_name)
        return

    character_name = character_name.upper()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if characters_collection.find_one({"character": character_name}):
        bot.send_message(chat_id, "–¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω.")
        return

    character_data['character'] = character_name
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–æ 2700 —Å–∏–º–≤–æ–ª–æ–≤):")
    bot.register_next_step_handler(message, get_character_description)

def get_character_description(message):
    chat_id = message.chat.id
    description = message.text.strip()

    if len(description) > 2700:
        bot.send_message(chat_id, "–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(message, get_character_description)
        return

    character_data['description'] = description

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ MongoDB
    result = characters_collection.insert_one(character_data)
    inserted_id = result.inserted_id

    logging.info(f'–ù–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {character_data} —Å ObjectId: {inserted_id}')
    bot.send_message(chat_id, f"""
    –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {character_data['character']} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! ObjectId –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:
    
    {inserted_id}
    """)

    character_data.clear()  # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è