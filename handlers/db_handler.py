import os
import logging
from config import bot
from bot.utils import is_admin
from pymongo import MongoClient
import re
from dotenv import load_dotenv
load_dotenv()

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>     DBASE HANDLER     >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

MONGO_URI = os.getenv("MONGO_URI")
DBASE = os.getenv('DBASE')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
client = MongoClient(MONGO_URI)
db = client[DBASE]
collection = db['users_collection']
characters_collection = db['characters']

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
user_data = {}

# –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã /newuser
@bot.message_handler(commands=['newuser'])
def new_user(message):
    if not is_admin(message.chat.id):
        bot.send_message(message.chat.id, "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return
    try:
        chat_id = message.chat.id
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ chat_id:")
        bot.register_next_step_handler(message, get_chat_id)
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /newuser: {e}')
        bot.send_message(message.from_user.id, f'{e} ü´§ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω.')
        return

# –ü–æ–ª—É—á–µ–Ω–∏–µ chat_id –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
def get_chat_id(message):
    chat_id = message.chat.id
    try:
        entered_chat_id = int(message.text)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π chat_id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if collection.find_one({"chat_id": entered_chat_id}):
            bot.send_message(chat_id, "–¢–∞–∫–æ–π chat_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω.")
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ chat_id –Ω–µ —É–Ω–∏–∫–∞–ª–µ–Ω
        user_data['chat_id'] = entered_chat_id

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ characters
        characters = characters_collection.find({}, {"character": 1, "_id": 0})
        character_list = [char['character'] for char in characters]
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–º–µ–Ω–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        characters_str = ', '.join(character_list)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        bot.send_message(chat_id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {characters_str}")

        # bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")
        bot.register_next_step_handler(message, save_character)
    except ValueError:
        bot.send_message(chat_id, "chat_id –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, get_chat_id)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /newuser: {e}')
        bot.send_message(message.chat.id, f"–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω. {e}")
        return

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
def save_character(message):
    chat_id = message.chat.id
    character_name = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ characters
    if not characters_collection.find_one({"character": character_name}):
        bot.send_message(chat_id, f"–ü–µ—Ä—Å–æ–Ω–∞–∂ {character_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, save_character) # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ—Ç
    user_data['character'] = character_name
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
    bot.register_next_step_handler(message, get_user_name)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏ –∏ —Å–∏–º–≤–æ–ª–æ–≤
def get_user_name(message):
    chat_id = message.chat.id
    users_name_string = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏ (–º–∞–∫—Å. 150 —Å–∏–º–≤–æ–ª–æ–≤)
    if len(users_name_string) > 150:
        bot.send_message(chat_id, "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥. –û–±—â–∞—è –¥–ª–∏–Ω–∞ –≤—Å–µ—Ö –∏–º–µ–Ω –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 150 —Å–∏–º–≤–æ–ª–æ–≤.")
        bot.register_next_step_handler(message, get_user_name)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        return

    # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞
    users_name = [name.strip() for name in users_name_string.split(',')]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for name in users_name:
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏ (–º–∞–∫—Å. 50 —Å–∏–º–≤–æ–ª–æ–≤)
        if len(name) > 50:
            bot.send_message(chat_id, f"–ò–º—è '{name}' —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ ‚Äî 50 —Å–∏–º–≤–æ–ª–æ–≤.")
            bot.register_next_step_handler(message, get_user_name)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (–±—É–∫–≤—ã –ª–∞—Ç–∏–Ω–∏—Ü—ã, –∫–∏—Ä–∏–ª–ª–∏—Ü—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã)
        if not re.match(r"^[a-zA-Z–∞-—è–ê-–Ø—ë–Å0-9\s\-']+$", name):
            bot.send_message(chat_id, f"–ò–º—è '{name}' —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã.")
            bot.register_next_step_handler(message, get_user_name)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
            return
    
    # –ï—Å–ª–∏ –≤—Å–µ –∏–º–µ–Ω–∞ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö
    user_data['users_name'] = users_name
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (male/female):")
    bot.register_next_step_handler(message, get_user_gender)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–æ–π ObjectId
def get_user_gender(message):
    chat_id = message.chat.id
    user_gender = message.text.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª —Ä–∞–≤–µ–Ω –ª–∏–±–æ 'male', –ª–∏–±–æ 'female'
    if user_gender not in ['male', 'female']:
        bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'male' –∏–ª–∏ 'female'.")
        bot.register_next_step_handler(message, get_user_gender)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        return
    
    # –ï—Å–ª–∏ –≤–≤–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    user_data['gender'] = user_gender
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç -12 –¥–æ 14):")
    bot.register_next_step_handler(message, get_user_timezone)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
def get_user_timezone(message):
    chat_id = message.chat.id
    try:
        timezone = int(message.text)  # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç -12 –¥–æ 14, –≤–∫–ª—é—á–∞—è 0
        if timezone < -12 or timezone > 14:
            raise ValueError  # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞

        user_data['timezone'] = timezone
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ MongoDB
        new_chat = {
            "chat_id": user_data['chat_id'],
            "character": user_data['character'],
            "users_name": user_data['users_name'],  # –ú–∞—Å—Å–∏–≤ –∏–º–µ–Ω
            "users_gender": user_data['gender'],
            "timezone": timezone  # –ù–æ–≤–æ–µ –ø–æ–ª–µ timezone
        }
        result = collection.insert_one(new_chat)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        inserted_id = result.inserted_id  # –ü–æ–ª—É—á–∞–µ–º ObjectId –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞

        logging.info(f'–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {new_chat} —Å ObjectId: {inserted_id}') 
        bot.send_message(chat_id, f"""
        –î–∞–Ω–Ω—ã–µ –¥–ª—è —á–∞—Ç–∞ {user_data['chat_id']} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ ObjectId:
        
        python -m users_scripts.new_love "{inserted_id}"
        """)

        user_data.clear()  # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

    except ValueError:
        bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç -12 –¥–æ 14.")
        bot.register_next_step_handler(message, get_user_timezone)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞